
//Set up Analog and Digital Pins

// Analog Pins
const int Sensor = 0;         // Piezo sensor on pin 0.

//Digital Pins
const int Slideswitch = 2;       // Reprogramming Switch on Pin 2
const int unlockServo = 3;       // Servo on Pin 3

//OPTIONAL Digital Pins
const int GreenLED = 4;         //Accepting Green LED Pin 4
const int RedLED = 5;           //Rejecting Red LED Pin 5

//Constant 
const int lockTurnTime =1000 ; //milliseconds that we run the motor
//Variables
int sensorValue = 0;    		//Variable dedicated to "hearing" a knock

void setup()
{
pinMode(unlockServo, OUTPUT);
  pinMode(RedLED, OUTPUT);
  pinMode(GreenLED, OUTPUT);
}

void loop()
{
if (sensorValue = analogRead(Sensor))
	if (digitalRead(Slideswitch == HIGH))
	{
		reprogramming = true;
				for (int thisNote = 0; thisNote < 8; thisNote++) {
    // to calculate the note duration, take one second
    // divided by the note type.

    int noteDuration = 1000 / noteDurations[thisNote];
    tone(8, melody[thisNote], noteDuration);
    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.30;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(8);
		}
	}
	else 
	{
		reprogramming = false;
	}




// RUN the Servo
void TriggerServo(){
  Serial.println("Door unlocked!");
  int i=0;
  
  // turn the servo on for a bit.
  digitalWrite(unlockServo, HIGH);
  digitalWrite(GreenLED, HIGH);            // And the green LED too.
  
  delay (lockTurnTime);                    // Wait a bit.
  
  digitalWrite(unlockServo, LOW);            // Turn the motor off.
  
  // Blink the green LED a few times for more visual feedback.
  for (i=0; i < 5; i++){   
      digitalWrite(GreenLED, LOW);
      delay(100);
      digitalWrite(GreenLED, HIGH);
      delay(100);
  }
   
}

